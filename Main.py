# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1484B63EOd5ymEwfyv-J5gsxlBTAqOyBL
"""

from google.colab import files

# Upload the kaggle.json file that you downloaded
uploaded = files.upload()

# Move the uploaded file to the correct directory
!mkdir -p ~/.kaggle
!cp kaggle.json ~/.kaggle/
!chmod 600 ~/.kaggle/kaggle.json

from google.colab import files

# Upload the kaggle.json file that you downloaded
uploaded = files.upload()

# Move the uploaded file to the correct directory
!mkdir -p /root/.kaggle
!mv kaggle.json /root/.kaggle/
!chmod 600 /root/.kaggle/kaggle.json

#Downloading data from kaggle

!kaggle datasets download -d paramaggarwal/fashion-product-images-small

!unzip -q fashion-product-images-small.zip -d dataset-folder

import tensorflow

from tensorflow.keras.preprocessing import image

from tensorflow.keras.layers import GlobalMaxPooling2D
from tensorflow.keras.applications.resnet50 import ResNet50,preprocess_input
import numpy as np
from numpy.linalg import norm

model = ResNet50(weights='imagenet',include_top=False,input_shape=(224,224,3))

model.trainable=False

#Extracting Features for similarity
def feature_extract(img_path,model):

  img = image.load_img(img_path,target_size=(224,224,3))
  img_array = image.img_to_array(img)

  expanded_img_array = np.expand_dims(img_array,axis=0)
  pre_processed_img = preprocess_input(expanded_img_array)

  result = model.predict(pre_processed_img).flatten()
  normalized_result = result / norm(result)

  return normalized_result

import os
from tqdm import tqdm

cd/content/dataset-folder

filenames = []

for file in os.listdir('images'):
  filenames.append(os.path.join('images',file))

features_list = []
for file in filenames:
  features_list.append(feature_extract(file,model))

import pickle

pickle.dump(features_list,open('embeddings.pkl','wb'))
pickle.dump(filenames,open('filenames.pkl','wb'))

# Checking on sample data from Nearest Neighbor's
# And showing resulting 5 images

feature_extract('/content/dataset-folder/images/10011.jpg',model)

from sklearn.neighbors import NearestNeighbors
import cv2

features_list = np.array(pickle.load(open('embeddings.pkl','rb')))
filenames = pickle.load(open('filenames.pkl','rb'))
neighbors = NearestNeighbors(n_neighbors=6,algorithm='brute',metric='euclidean')
neighbors.fit(features_list)

distances,indices = neighbors.kneighbors([normalized_result])

for file in indices[0][1:6]:
  temp_img = cv2.imread(filenames[file])
  cv2.imshow('output',cv2.resize(temp_img,(512,512)))
  cv2.waitkey(0)